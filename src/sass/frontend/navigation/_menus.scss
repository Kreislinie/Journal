@use '../variables' as var;

/*
 * Navigation bar styling.
 */
.main-navigation {
  border-bottom: 1px solid rgb(223, 223, 223);
  background-color: rgb(255, 255, 255);
  height: var.$size-navbar-height;
  position: fixed;
  z-index: 1;
  width: 100%;
  padding: 0 6px;
  top: 0;

  img {
    height: var.$size-navbar-height;
    padding: 9px;
    float: left;
  }

}

// Link styling
.navbar-right a, .navbar-left a {
  font-size: var.$type-font-size-menu;
  text-decoration: none;
  cursor: pointer;
  line-height: var.$size-navbar-height - 1px;
  transition: all ease .4s;
  display: inline;

  &:hover {
    color: var.$color-bitjournal-blue;
  }   

}


/*
 * Content on the right side of the navbar ('Edit mode') 
 * and on the left side of the navbar (menu items).
 */
#bj-edit-link {
  position: fixed;
  top: 6px;
  right: 20px;
  width: 129px;
  height: 37px;
  border-radius: 7px;
  background: #1e8a9d;
  box-shadow: 2px -1px 32px -10px rgba(23, 201, 219, 0.68);
  line-height: unset;
  color: white;

  svg {
    width: 20px;
    color: white;
    margin-right: 10px;
    margin-left: 12px;
    transform: translateY(5px);
  }
}
/*
.navbar-right {
  text-align: right;
  float: right;
  width: auto;
  padding: 0 8px 0 7px;

  svg {
    width: 19px;
    margin: 0 5px -4px 0;
  }
}

*/
.navbar-left {
  float: left;

  a {
    margin-left: 10px;
  }
}


/*
 * Content in the middle of the navbar (mainly used for showing date, page number, ...).
 */
.entry-meta p,
.nav-next a,
.nav-previous a {
  text-align: center;
  font-weight: 300;
  height: var.$size-navbar-height;
  line-height: var.$size-navbar-height;
  margin: 0;
  font-size: var.$type-font-size-menu;
  text-decoration: none;
}

.entry-meta {
  position: absolute;
  width: 100%;
  z-index: -5;
  top: 0;
  left: 0;
  font-size: var.$type-font-size-menu;

  a {
    display: inline-block;
  }

  svg {
    transform: translateY(6px);
    color: var.$color-icon;
  }

  // Display navigation on the bottom of the screen on small screens.
  @media only screen and (max-width: var.$tablet){
    position: fixed; 
    border-top: 1px solid rgb(223, 223, 223);
    background-color: rgb(255, 255, 255);
    bottom:0;
    width: 100%;
    padding: 0 15px;
    top: unset;
  }

}

// 'Previous' arrow
.nav-previous {
  width: 50%;
  float: left;
  text-align: right;
  padding-right: 25px;
}

// 'Next' arrow
.nav-next {
  width: 50%;
  float: right;
  text-align: left;
  padding-left: 25px;
}

/*
 * Mobile menu
 */
@media only screen and ( max-width: var.$tablet ) {

  // Mobile menu styling.
  .navbar-left {
    transform: translateX(-100vw);
    transition: all .4s ease-in-out;
    width: 0;
    top: var.$size-navbar-height;
    height: 100vh;
    background: white;
    display: grid;
    align-items: center;
    position: absolute;

    a {
      display: block;
      text-align: center;
      font-size: 1.5em;

      &:last-of-type {
        padding-bottom: 2 * var.$size-navbar-height;
      }

      img {
        width: 100%;
        height: 2 * var.$size-navbar-height;
      }

    }

    .home-logo {
      height: 2 * var.$size-navbar-height;
      margin-bottom: 75px;
    }

  }

  // Position if mobile menu is opened.
  .open {
    position: absolute;
    transform: translateX(-15px);
    width: 100%;

    a {
      margin-left: 6px;
    }

  }

}

.mobile-nav-wrap {
  display: inline-block;
  padding: 24px 0;
  cursor: pointer;
}


/*
 * Mobile menu icon
 */
.mobile-nav {
  display: none;

  // Burger menu
  @media only screen and (max-width: var.$tablet) {
    position: relative;
    display: block;
    width: 20px;
    height: 2px;
    background: var.$color-text-main;
    transition: all .2s ease-in-out;
    
    &:before, &:after {
      position: absolute;
      background: var.$color-text-main;
      content: '';
      width: 20px;
      height: 2px;
      transition: all .2s ease-in-out;
    }
    
    &:before {
      top: -8px;
    }
    &:after {
      top: 8px;
    }
 
  }

}

// Close icon
span.mobile-nav.active {
  background: transparent;  

  &:before {
    transform: rotate(45deg) translate(5px, 6px);
  }
  &:after {
    transform: rotate(-45deg) translate(5px, -6px);
  }
  
}